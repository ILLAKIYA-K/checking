2024-03-29 16:06:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE if not exists City( cityId INT Primary Key AUTO_INCREMENT, cityName VARCHAR(255), population INT, latitude VARCHAR(255), longitude VARCHAR(255), [*]) CREATE TABLE if not exists Country( countryId INT Primary Key AUTO_INCREMENT, countryName VARCHAR(255), currency VARCHAR(255), population INT , latitude VARCHAR(255), longitude VARCHAR(255) )"; expected "identifier"; SQL statement:
CREATE TABLE if not exists City( cityId INT Primary Key AUTO_INCREMENT, cityName VARCHAR(255), population INT, latitude VARCHAR(255), longitude VARCHAR(255), ) CREATE TABLE if not exists Country( countryId INT Primary Key AUTO_INCREMENT, countryName VARCHAR(255), currency VARCHAR(255), population INT , latitude VARCHAR(255), longitude VARCHAR(255) ) [42001-214]
2024-03-29 16:21:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE if not exists City( cityId INT Primary Key AUTO_INCREMENT, cityName VARCHAR(255), population INT, latitude VARCHAR(255), longitude VARCHAR(255), [*]) CREATE TABLE if not exists Country( countryId INT Primary Key AUTO_INCREMENT, countryName VARCHAR(255), currency VARCHAR(255), population INT , latitude VARCHAR(255), longitude VARCHAR(255) )"; expected "identifier"; SQL statement:
CREATE TABLE if not exists City( cityId INT Primary Key AUTO_INCREMENT, cityName VARCHAR(255), population INT, latitude VARCHAR(255), longitude VARCHAR(255), ) CREATE TABLE if not exists Country( countryId INT Primary Key AUTO_INCREMENT, countryName VARCHAR(255), currency VARCHAR(255), population INT , latitude VARCHAR(255), longitude VARCHAR(255) ) [42001-214]
2024-03-29 16:25:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE if not exists City( cityId INT Primary Key AUTO_INCREMENT, cityName VARCHAR(255), population INT, latitude VARCHAR(255), longitude VARCHAR(255), [*]) CREATE TABLE if not exists Country( countryId INT Primary Key AUTO_INCREMENT, countryName VARCHAR(255), currency VARCHAR(255), population INT , latitude VARCHAR(255), longitude VARCHAR(255) )"; expected "identifier"; SQL statement:
CREATE TABLE if not exists City( cityId INT Primary Key AUTO_INCREMENT, cityName VARCHAR(255), population INT, latitude VARCHAR(255), longitude VARCHAR(255), ) CREATE TABLE if not exists Country( countryId INT Primary Key AUTO_INCREMENT, countryName VARCHAR(255), currency VARCHAR(255), population INT , latitude VARCHAR(255), longitude VARCHAR(255) ) [42001-214]
2024-03-29 17:50:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CITY" not found; SQL statement:
select city0_.cityid as cityid1_0_, city0_.cityname as cityname2_0_, city0_.country_id as country_6_0_, city0_.latitude as latitude3_0_, city0_.longitude as longitud4_0_, city0_.population as populati5_0_ from city city0_ [42102-214]
2024-03-29 17:52:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CITY" not found; SQL statement:
select city0_.cityid as cityid1_0_, city0_.cityname as cityname2_0_, city0_.countryid as countryi6_0_, city0_.latitude as latitude3_0_, city0_.longitude as longitud4_0_, city0_.population as populati5_0_ from city city0_ [42102-214]
2024-03-29 18:00:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CITY" not found; SQL statement:
select city0_.cityid as cityid1_0_0_, city0_.cityname as cityname2_0_0_, city0_.countryid as countryi6_0_0_, city0_.latitude as latitude3_0_0_, city0_.longitude as longitud4_0_0_, city0_.population as populati5_0_0_, country1_.countryid as countryi1_1_1_, country1_.countryname as countryn2_1_1_, country1_.currency as currency3_1_1_, country1_.latitude as latitude4_1_1_, country1_.longitude as longitud5_1_1_, country1_.population as populati6_1_1_ from city city0_ left outer join country country1_ on city0_.countryid=country1_.countryid where city0_.cityid=? [42102-214]
2024-03-29 18:02:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column count does not match; SQL statement:
insert into City( cityName , population , latitude , longitude) VALUES( 'Bangalore' , 12425304 , '12.9716° N' , '77.5946° E',1 ) [21002-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.dml.Insert.doPrepare(Insert.java:295)
	at org.h2.command.dml.DataChangeStatement.prepare(DataChangeStatement.java:37)
	at org.h2.command.Parser.prepareCommand(Parser.java:575)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:90)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.example.geohub.GeoHubApplication.main(GeoHubApplication.java:12)
2024-03-29 18:35:35 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "DELETE FROM COUNTRY WHERE COUNTRYID = 11 OR  COUNTRYID = 12 OR  COUNTRYID = 13 OR  COUNTRYID = 14 OR  COUNTRYID = 15 OR  COUNTRYID = 15 OR  COUNTRYID = 16 OR  COUNTRYID = 17 OR COUNTRYID = 18 OR  COUNTRYID = 19  [*]COUNTRYID = 20"; SQL statement:
DELETE FROM COUNTRY WHERE COUNTRYID = 11 OR  COUNTRYID = 12 OR  COUNTRYID = 13 OR  COUNTRYID = 14 OR  COUNTRYID = 15 OR  COUNTRYID = 15 OR  COUNTRYID = 16 OR  COUNTRYID = 17 OR COUNTRYID = 18 OR  COUNTRYID = 19  COUNTRYID = 20 [42000-214]
2024-03-29 18:36:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "DELETE FROM COUNTRY WHERE COUNTRYID = 11 OR  COUNTRYID = 12 OR  COUNTRYID = 13 OR  COUNTRYID = 14 OR  COUNTRYID = 15 OR  COUNTRYID = 15 OR  COUNTRYID = 16 OR  COUNTRYID = 17 OR COUNTRYID = 18 OR  COUNTRYID = 19  [*]COUNTRYID = 20"; SQL statement:
DELETE FROM COUNTRY WHERE COUNTRYID = 11 OR  COUNTRYID = 12 OR  COUNTRYID = 13 OR  COUNTRYID = 14 OR  COUNTRYID = 15 OR  COUNTRYID = 15 OR  COUNTRYID = 16 OR  COUNTRYID = 17 OR COUNTRYID = 18 OR  COUNTRYID = 19  COUNTRYID = 20 [42000-214]
2024-03-29 18:38:21 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "COUNTRY" because "CONSTRAINT_1F" depends on it; SQL statement:
DROP TABLE COUNTRY [90107-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:632)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:97)
	at org.h2.command.ddl.DropTable.update(DropTable.java:121)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:252)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp.query(WebApp.java:1113)
	at org.h2.server.web.WebApp.process(WebApp.java:244)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2024-03-29 18:40:16 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "COUNTRY" because "CONSTRAINT_1F" depends on it; SQL statement:
DROP TABLE COUNTRY [90107-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:632)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:97)
	at org.h2.command.ddl.DropTable.update(DropTable.java:121)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:252)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp.query(WebApp.java:1113)
	at org.h2.server.web.WebApp.process(WebApp.java:244)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
